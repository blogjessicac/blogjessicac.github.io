I am not an IT specialist, but I am good at "Tech Stuff." Want to know my secret?

A few years ago, I discovered the biggest secret of "Tech-ie" people. By "Tech-ie," I mean the folks who use words like defrag and reboot. People who talk about IP addresses and go on rants about Big Data. You might be thinking, I'm not a "Tech-ie" person, what's that got to do with me? Well, to you, I'll say, this secret is more extensive than you think, Its so extensive that it covers "Tech-ie" and non "Tech-ie" people alike.  By non "Tech-ie" I mean those who are unaware that a USB c port is very different from a USB port and people who yank out their flash drive without ejecting them first. This secret is for all of us.

The secret is Google. 
(insert its a secret stock image)

You can use Google, Firefox, Safari, or Bing. Even Duckduckgo will do. The key is reaching out and sorting through the plethora of resources that are out there. Top professionals and non-specialists alike Google things when they are unsure how to do something or can't quite remember every step of a process. The main difference between the two, in my opinion, is the specificity of the question asked. For example, if a novice and a pro wanted to know something about coding a novice might Google something like, how do I code. On the other hand a pro would Google something like how to use C# to call an action in Unity for 2d gaming instead. It is like the difference between Googling how to learn a foreign language vs. What are some French words related to baking. There is a lot of information out there, so it pays to be specific. 

An excellent way to get more specific is to create a plan. take for example this remixed communication plan.

 (insert pi dev pic)

The best way to learn to code, is to code. I have found, from my experience learning how to code, that coding can be frustrating. When things dont work and you spend hours just to find that you ended a line of code with a colon instead of a semi colon can make you want to quit. What helps you deal with that frustration is the potential satisfaction you will get when you get something close to a product that you were going for. So instead of just finding random coding activities online I think you should first figure out what you want to do with code. So now instead of learning blanket code you are learning code thats releveant to you and your coding goals. So even though you used an upercase A in the middle of a sentence in line 10 of 90 lines of code and it took you 2 hours to find it, you will be less tempted to throw your computer out the window because soon you will have the perfect database to log information you collect on daily hikes so you can see patterns better. So lets run with this example to see how to make a great plan.

(insert pic of a woodland trail)

Lets say you go on a hike through your neighborhood woodland area for an hour every morning. On your hikes you take your journal and make notes about your expereince. You write about what the weather was like, what interesting things you saw, how you felt about the hike etc. You dont like to reread through all the journals you have collected but you would love to make like a spread sheet or something that can hold some data so you can look for trends over time. You come to an Infinity Pi meeting at the Northeast Branch of the library one day and you are asked what kind of project you would want to work on. When asked you begin to wonder if you could use code to make that spread sheet you have been thinking about? 


So the Goal is to see if you can create this half imagined data thing with code. Done!
now how do we break that down into small pieces? I would start with defining things, because I am a nerd. Instead of Googleing something along the lines of how to make a data spread sheet thing with code. Start with what is a data set, because you know you want to deal with a set of data that you have collected. As you learn about data sets you will learn what they consist of. Just a brief reading of the beginning of the wiki page for dataset indicates a data set is data in a database. So now we know we will be creating a database. leading us to another specific Google search, what code is used to create databases. Now if you just look at the search page and click on no links I'm sure you will see SQL in a lot of the titles and the mini descriptions, that to me says its probally important. That gives you a starting off point to research because to make this database you will definatly need to deal with SQL. You can also make more specific Google searches about SQL like, what is SQL, how is SQL used to create databases, or what coding languages are used with SQL. Instead of Googling how to code now you have a goal of what language you want to learn to create your specific results. That makes it easier to create a plan for your journy as well as keep your enthusiasm for the project high.

When activating your specific Googling skills remember to read everything you can find. Read articles, wiki pages, and even comments in forums. Speaking of forums there are a lot of forums answering tech questions with very knowledgeable people who often link resources in their answers. When you come across language or words you dont understand dont get frustrated, get excited! Thats a new adventure waiting for you to explore it. The more you learn the easier it will be to develop your game plan for how you want to stay on mesage as well as break down your overall goal into smaller bite size pieces. When making your own remixed communication plan. Be sure that when you are creating goals that are SMART.

S is for specific, meaning you want to use MySQL to create your database because it is free, and you want to learn PHP, HTML/CSS, and Javascript to not only create a database but to also use your data into a cool webpage that will display your hiking adventure.

M is for measureable in a way that if its not quantifiable it at least suggest an indicator of progress. Like tallying the number of hours you spent on sites visited for research on your project. Then using that number as a measure of how much you have learned when you talk to your friends about your project. 

A is for attainable in the sense that its something you can actually do vs something you could probally do, one day. For example if you do not run its possilbe that you could run a marathon one day but its attainable for you to take a ten minute walk every day down the street in front of your house. After enough of those 10 minute walks it may be attainable to take a 10 minute walk with a 5 minute run. Thats how you can stack attainable actions until that probable action becomes attainable.

R is for relevantelevant meaning the whole reason you are learning mySQL, PHP, HTML/CSS and Javascript is because it realtes to a specific thing that you want to do with data that you enjoy collecting. 

T is for time-based, fgor example, maybe you decided you will spend 1 hour a week researching and learning code. So by the end of the month if you have logged 4 hours or more you know you are makeing progress. You also know that in six months in having logged 24 hours of code/research you personally feel you should be able to create something out of code. You may not finish your goal project after that amount of time, but maybe a test program. 

Now that you know the secret, get out there and start coding. If you want some company check out the Infinity Pi Coding Clubs Website. They are a  group of people of all ages who gather at the Northeast Branch to code together.

Happy coding, and remember Keep calm & Save often.
